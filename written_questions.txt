1. I used the video games dataset. My first graph, which is the bar plot, shows 
the top 10 video games for a selected year, or of all time if 2021 is selected. 
This directly answers the first question. The selected year can be changed by 
manipulating the year slider. 

My second graph is a map that shows the top video game genre for each region.
The top video game genre is determined by taking the total sales for each genre
in a particular region and then finding the genre with the most sales. 
The name of the region, and the top video game genre can easily be viewed by 
hovering over the circle for each region with the mouse cursor.

My third graph is a pie chart that displays the top 5 publishers for each video 
game genre. The top 5 publishers are calculated based on global sales numbers for 
each genre. The rest of the global sales numbers are represented by the "Other" 
label in the pie chart. There is also a percentage next to each publisher name, 
which represents the market share of that publisher (i.e. the publisher's global 
sales/total global sales for that genre). This way, The top publisher for a genre 
is clearly visible by looking at the name and market share of the slice that is 
not "Other". 

2. Firstly, D3 was useful in speeding up the creation of specific popular charts, 
like pie charts or bar charts. It helped to automate the calculation of how big
the size of each pie should be, for instance. Secondly, D3 made it easy to add 
animations to our charts. By using transition(), we could quickly make our charts 
animated when changing between data. Thirdly, as D3 is relatively popular, there 
is extensive documentation online for beginners like me to get started and debug 
whatever bugs we have.

3. Firstly, due to the fact that specific charts are already created, this means 
that unless we are limited to specific charts for our visualizations unless we want 
to manually make charts from scratch. Secondly, D3 might not be well supported on all 
browsers and devices, particularly on older devices with outdated browser versions. 
In those cases, if D3 is not supported, users might just see a blank page. Thirdly, 
since D3 generates charts live in the browser, it might run slowly on a less powerful 
system and when large datasets are used. By using D3, we might be using more system 
resources than necessary, if all we wanted to do is display a static chart. In those 
cases, it might be better for us to simply generate an image with another software like 
matplotlib and then place it on our webpage.

4. Ordinary people, and any people with hearing difficulties will find this page 
accessible, since there are no sound elements on the page. People with visual impairments 
will probably have the most difficulty with the page, since many elements are not 
specifically coded to work with screen reader programs as described in "A Comprehensive 
Guide to Accessible Data Visualization". Color blind users should be able to use the 
website fine, as while there are colors, they are more there just for style, and also 
everything has labels outside of the colored areas. Also, the shapes are separated with 
lines, as described in the "Separate elements with whitespace or pattern" point from "A 
Comprehensive Guide to Accessible Data Visualization". People with repetitive motion injuries 
or difficulties clicking and holding the mouse might have trouble using the slider. To 
make the dashboard more accessible to all audiences, perhaps a table that mirrors what
is being displayed on the graph and the map will be helpful for visually impaired 
people, as that will work better with screen reader programs. 

5. Drawing out the shapes of the figures before starting the implementation step and 
listing out various challenges that certain groups might have using the dashboard would 
have helped to make the dashboard more accessible. I was constrained by the fact that I 
did not decide on the specific visualizations I wanted to use until I was in the middle 
of implementing the figures. Also, I could have used a dropdown menu instead of the slider 
for the year. Unfortunately I had already implemented and tested the slider by the time
I realized the limitations of it, and also using a dropdown menu will be very long as 
there are about 40 years in the slider's range.